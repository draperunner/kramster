[
  {
    "question": "Maksimal hastighetsøkning for et samlebånd med <math><mi>k</mi></math> steg er:",
    "answers": [0],
    "options": [
      "<math><mi>k</mi></math>",
      "<math><msup><mi>k</mi><mn>2</mn></msup></math>",
      "<math><msup><mi>k</mi><mfrac><mn>1</mn><mn>2</mn></mfrac></msup></math>",
      "<math><mi>k</mi><mo>-</mo><mi>n</mi></math>, der <math><mi>n</mi></math> er antall instruksjoner i et program",
      "Ingen hastighetsøkning oppnås da man fremdeles får maks en instruksjon ferdig pr. klokkesyklus"
    ]
  },
  {
    "question": "For at samlebåndsprinsippet (eng: pipelining) skal kunne utnyttes best mulig",
    "answers": [0],
    "options": [
      "bør flest mulig av trinnene i samlebåndet gjøre nyttig arbeid til enhver tid.",
      "bør positiv flanke-triggede D-vipper benyttes.",
      "bør det kombineres med en RISC arkitektur."
    ]
  },
  {
    "question": "Hva er den viktigste årsaken til at forgreninger er et problem for samlebånd?",
    "answers": [0],
    "options": [
      "Adressen til neste instruksjon er ikke klar før etter at forgreningsinstruksjonen er utført.",
      "Det er ikke sikkert at instruksjonene ligger etter hverandre i hovedlageret.",
      "Forgreningsinstruksjonene tar lang tid å utføre.",
      "Forgreningsinstruksjoner er ofte involvert i dataavhengigheter.",
      "Forgreninger er bare et problem ved superskalaritet."
    ]
  },
  {
    "question": "Under er det gitt fem argumenter for å ikke ha mange steg i et samlebånd. Hvilket av disse er ikke riktig?",
    "answers": [4],
    "options": [
      "Ytelsestap pga. gal forgreiningsprediksjon (branch penalty)",
      "Hvert steg introduserer forsinkelse pga.  bufferforsinkelse (latch delay)",
      "Nødvendig med mer komplisert logikk for bruk av lager og register",
      "Økt sannsynlighet for dataavhengigheter",
      "Øker sjansen for galt resultat pga. feilprediksjon"
    ]
  },
  {
    "question": "Hva er <em>ikke</em> riktig om samlebånd?",
    "answers": [2],
    "options": [
      "Samlebånd utnytter at man kan benytte flere sentrale enheter i prosessoren i parallell og dermed kunne ha flere instruksjoner under utførelse samtidig.",
      "Prosessorer med samlebånd benyttes i så godt som alle PC-er.",
      "Parallelliteten som er tilstede i alle samlebånd medfører at vi får en CPI (cycles per instruction) mindre enn 1; vi får altså ferdigstilt mer enn en instruksjon for hver sykel.",
      "Maksimal hastighetsøkning for et samlebånd sammenlignet med den tilsvarende flersykelmaskinen vil være avhengig av antall samlebåndssteg."
    ]
  },
  {
    "question": "Et av de største problemene med samlebåndsprinsippet (eng. pipelining) for konstruksjon av prosessorer er",
    "answers": [1],
    "options": [
      "generelt tregere minneaksess.",
      "mulighet for at dataavhengigheter kan oppstå.",
      "at en operasjon tar flere klokkesykler."
    ]
  },
  {
    "question": "Hva er <em>feil</em> når det gjelder pipelining(samlebånd)?",
    "answers": [3],
    "options": [
      "En av de størte utfordringene ved bruk av pipelining er å forutse hopp instruksjoner",
      "Ved bruk av pipelining vil hver instrukjson ta flere klokkesykler",
      "Det vil gå tregere å utføre en enkelt instruksjon ved bruk av pipelining",
      "Ved bruk av pipelining vil man kunne komme til å utføre instruksjoner som ikke skal utføres",
      "Ved bruk av pipelining vil flere instruksjoner behandles på samme tid"
    ]
  }
]
